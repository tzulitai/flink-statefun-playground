# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
version: "3.0"
module:
  meta:
    type: remote
  spec:
    endpoints:
      - endpoint:
          meta:
            kind: http
          spec:
            functions: com.example/*
            urlPathTemplate: http://shopping-cart-functions:1108/
    ingresses:
      # user-shopping-cart:
      # TODO: add RemoveFromCart
      - ingress:
          meta:
            type: io.statefun.kafka/ingress
            id: example.com/add-to-cart
          spec:
            address: kafka:9092
            consumerGroupId: my-group-id
            topics:
              - topic: add-to-cart
                valueType: com.example/AddToCart
                targets:
                  - com.example/user-shopping-cart
      - ingress:
          meta:
            type: io.statefun.kafka/ingress
            id: example.com/clear-cart
          spec:
            address: kafka:9092
            consumerGroupId: my-group-id
            topics:
              - topic: clear-cart
                valueType: com.example/ClearCart
                targets:
                  - com.example/user-shopping-cart
      - ingress:
          meta:
            type: io.statefun.kafka/ingress
            id: example.com/checkout
          spec:
            address: kafka:9092
            consumerGroupId: my-group-id
            topics:
              - topic: checkout
                valueType: com.example/Checkout
                targets:
                  - com.example/user-shopping-cart
      - ingress:
          meta:
            type: io.statefun.kafka/ingress
            id: com.example/restock-items
          spec:
            address: kafka:9092
            consumerGroupId: my-group-id
            topics:
              - topic: restock-items
                valueType: com.example/RestockItem
                targets:
                  - com.example/stock
    egresses:
      - egress:
          meta:
            type: io.statefun.kafka/egress
            id: com.example/receipts
          spec:
            address: kafka:9092
            deliverySemantic:
              type: exactly-once
              transactionTimeoutMillis: 100000